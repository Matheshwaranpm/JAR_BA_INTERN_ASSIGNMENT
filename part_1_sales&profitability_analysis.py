# -*- coding: utf-8 -*-
"""Part-1-Sales&Profitability-Analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YjPpU61E5FaGV6iKfD4sV92BOaVJreVx

# PART 1: SALES AND PROFITABILITY ANALYSIS
"""

# Importing necessary library
import pandas as pd

# Creating a dataframe
df = pd.read_csv("/content/drive/MyDrive/Colab Notebooks/Merged_orders.csv")
df

# Checks how many categories are present
df['Category'].unique()

profits = df.groupby('Category')

category_grouped = df.groupby("Category")

# Calculating total profit, amount and orders for each category
total_profit = category_grouped['Profit'].sum()
total_amount = category_grouped['Amount'].sum()
total_orders = category_grouped["Order ID"].nunique()

#average profit for each category
avg_profit = round(total_profit/total_orders,2)
avg_profit

"""These are the average profit per order for each category."""

# Calculating Profit margin for each category
profit_margin = round((total_profit/total_amount)*100,2)
profit_margin

# Merging all result to present clear view
result = pd.DataFrame({"Average Profit per Order": avg_profit,"Total Profit Margin(%)": profit_margin}).reset_index()
result

"""These are the average profit per order and total profit margin for each category and the profit margin values are in percentage."""

count_orders = sum(total_orders)
count_orders

total_orders

pos_profit = df[df["Profit"]>0]
neg_profit = df[df["Profit"]<0]

# Counting Positive profit order and sum of the profits
pos_stats = pos_profit.groupby("Category")["Profit"].agg(["count","sum"]).reset_index()
pos_stats

# Counting Negative profit order and sum of the profits
neg_stats = neg_profit.groupby("Category")["Profit"].agg(["count","sum"]).reset_index()
neg_stats

total_orders_per_cat = df.groupby("Category")["Profit"].count().astype(float)

# Merging all the results
profit_percent = pd.merge(pos_stats,neg_stats, on="Category",how="outer").fillna(0)
profit_percent["Total Orders"] = profit_percent["Category"].map(total_orders_per_cat)
profit_percent

# Calculating positive and negative percentage for each category
profit_percent["Positive %"]=(profit_percent["count_x"]/profit_percent["Total Orders"])*100
profit_percent["Negative %"]=(profit_percent["count_y"]/profit_percent["Total Orders"])*100
profit_percent = profit_percent.drop(columns=["Total Orders"])
profit_percent

# Renaming column name for understanding.
profit_percent.rename(columns={'count_x':'Positive Orders','sum_x':'Positive Profit','count_y':'Negative Orders','sum_y':'Negative Profit'},inplace= True)
profit_percent

"""In these, the top-performing category is `Clothing` which has 631 profitable orders with a `8.03%` profit margin and the low-performing category is `Furniture` which has only 139 profitable orders with a `1.81%` profit margin.

* Here we can see that clothing has 2/3 of positive profit where only 1/4 of negative profit which can be manageble and In furniture 3/5 positive profit but 5/12 of negative profit which is almost 50/50 chances.

* You can also note that there is only 241 orders were placed where 102 orders gave negative profit but clothing holds a total of 631 successful orders out of 910.

* Focus on product pricing and plan strategies to attract more customers
"""

